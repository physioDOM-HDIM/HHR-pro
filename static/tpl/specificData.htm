<!--
@license
Copyright (c) 2016 Telecom Sante
This code may only be used under the CC BY-NC 4.0 style license found at https://creativecommons.org/licenses/by-nc/4.0/legalcode

You are free to:

  Share — copy and redistribute the material in any medium or format
  Adapt — remix, transform, and build upon the material
  The licensor cannot revoke these freedoms as long as you follow the license terms.

Under the following terms:

  Attribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. 
  You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.
  
  NonCommercial — You may not use the material for commercial purposes.
  
  No additional restrictions — You may not apply legal terms or technological measures that legally restrict others 
  from doing anything the license permits.
-->

{% extends './page.htm' %}

{% block title %}{{"Specific data for evaluation"|i18n}}{% endblock %}

{% block head %}
{% parent %}
<script src="/scripts/utils.js"></script>
<script src="/scripts/modal.js"></script>
<script src="/bower_components/zdk-calendar/form2js.js"></script>
<link rel="import" href="/bower_components/zdk-calendar/zdk-input-date.html">
<link rel="import" href="/bower_components/zdk-calendar/custom-icons.html">
<link rel="import" href="/bower_components/core-ajax/core-ajax.html">
<link rel="import" href="/bower_components/core-list/core-list.html">

<style>
	.page {
		position:absolute;
		top:0;
		bottom:0;
		left:0;
		right:0;
		margin: 10px;
	}
	.summary .row {
		height: 35px;
		font-size: 1.2em;
	}
	
	#newEvtBtn {
		margin: 20px 0px;
	}
	
	#newEvent {
		border: 2px solid dodgerblue;
		padding: 5px;
		margin: 20px 0px;
	}
	
	label {
		font-weight: bold;
		width: 100px !important;
	}
	.item {
		padding:10px 0px;
	}
	.invalid {
		border: 2px solid crimson;
	}
</style>

{% block content %}
<div class="page" layout vertical>
<div class="row title">
	<label class="title">{{"Specific data for evaluation"|i18n}}</label>
</div>

<div class="summary">
	<template id="summary" repeat="{%raw%}{{ type in total }}{%endraw%}" is="auto-binding">
		<div class="row">
			{%raw%}
			<div class="col" style="flex:2"><b>{{ type.label}}</b></div>
			<div class="col">{{type.value}}</div>
			{%endraw%}
			<div class="col">
				<template if="{%raw%}{{ type.ref === 'HOSP'}}{%endraw%}">
					<span>{{"days"|i18n}} : {%raw%}{{type.days}}{%endraw%}</span>
				</template>
			</div>
			<div class="col">
				<template if="{%raw%}{{ type.ref === 'HOSP' && type.pending }}{%endraw%}">
					<span>{{"In progress" | i18n}}</span>
				</template>
			</div>
		</div>
	</template>
</div>

<div id="newEvtBtn" class="row control actions">
	<span class="spacer"></span>
	<button type="button" class="blue big" onclick="newEvent()">{{ "new event"|i18n }}</button>
</div>

<template id="events" is="auto-binding">
	<div id="newEvent" class="hidden">
		<form id="form">
			<div class="row">
				<label>Type</label>
				<div class="col">
					<select name="type">
						<template repeat="{%raw%}{{ option in options}}{%endraw%}">
							<option value="{%raw%}{{option.value}}{%endraw%}">{%raw%}{{option.label}}{%endraw%}</option>
						</template>
					</select>
				</div>
				<span class="spacer"></span>
				<label>Date</label>
				<div class="col">
					<zdk-input-date name="date" staticpos="true" stop="{%raw%}{{today}}{%endraw%}"></zdk-input-date>
				</div>
				<span class="spacer"></span>
			</div>
			<div class="row">
				<div style="width:50px"></div>
				<div class="col">
					<textarea placeholder="Comment" name="comment"></textarea>
				</div>
			</div>
			<div class="row control actions">
				<span class="spacer"></span>
				<button type="button" class="red big" onclick="cancelForm()">{{ "Cancel"|i18n }}</button>
				<button type="button" id="saveBtn" class="green big" onclick="saveForm()">{{ "Save"|i18n }}</button>
			</div>
		</form>
	</div>
	
	<div flex style="overflow-y: auto; padding:0px 8px;margin-bottom:20px">
	{%raw%}
	<template repeat="{{item in events}}">
		<div class="item">
		<div class="row">
			<div class="col" style="font-weight:bold; font-size:1.2em;">{{item.event.type | itemlabel }}</div>
			<div class="col">{{ item.event.date | fulldate }}</div>
		</div>
		<template if="{{ item.event.comment }}">
			<div class="row">
				<div style="width:50px"></div>
				<div class="col">
					<textarea disabled>{{ item.event.comment }}</textarea>
				</div>
			</div>
		</template>
		</div>
	</template>
	{%endraw%}
	</div>
</template>
</div>
{% endblock %}

<core-ajax id="ajaxSummary"
           auto
           url="/api/beneficiary/specificData/summary"
           handleAs="json"></core-ajax>
<core-ajax id="ajaxEvents"
           auto
           url="/api/beneficiary/specificData/events"
           handleAs="json"></core-ajax>
<core-ajax id="putEvent"
           method="PUT"
           url="/api/beneficiary/specificData"
           onCoreError="putError"
           handleAs="json"></core-ajax>

<script src="/bower_components/momentjs/min/moment.min.js"></script>
<script src="/bower_components/momentjs/min/moment-with-locales.min.js"></script>

<script>
	var summaryLabels = {
		"VISIT": '{{ "Visit of Prof. at home" | i18n }}',
		"EXAM" : '{{ "Medical Examination" | i18n }}',
		"HOSP" : '{{ "Hospitalisation" | i18n }}'
	};
	
	var eventLabels = {
		"VISIT"     : '{{ "Visit of Prof. at home" | i18n }}',
		"EXAM"      : '{{ "Medical Examination" | i18n }}',
		"HOSP_ENTRY": '{{ "Hospitalisation entry" | i18n }}',
		"HOSP_EXIT" : '{{ "Hospitalisation exit" | i18n }}'
	};
	var tplSummary, tplEvents, pending = false;
	lang = Cookies.get("lang");
	
	PolymerExpressions.prototype.fulldate = function (value) {
		if (value) {
			moment.locale(lang);
			return moment(value).format("LL");
		}
	};
	
	PolymerExpressions.prototype.itemlabel = function (value) {
		if (value) {
			return eventLabels[value];
		}
	};
	
	function init() {
		tplSummary = document.querySelector("#summary");
		tplEvents = document.querySelector("#events");
		
		document.querySelector("#ajaxSummary")
			.addEventListener("core-response", function (evt) {
				var tmp;
				var summary = {
					days   : evt.detail.response.days,
					pending: evt.detail.response.pending,
					total  : []
				};
				pending = summary.pending;
				for (item in evt.detail.response.total) {
					tmp = {
						ref: item,
						label: summaryLabels[item],
						value: evt.detail.response.total[item]
					};
					if( item === "HOSP" ) {
						tmp.days =  evt.detail.response.days || 0;
						tmp.pending = evt.detail.response.pending;
					}
					summary.total.push(tmp);
				}
				tplSummary.model = summary;
			});
		document.querySelector("#ajaxEvents")
			.addEventListener("core-response", function (evt) {
				tplEvents.model.events = evt.detail.response;
			});
		document.querySelector("#putEvent")
			.addEventListener("core-response", function (evt) {
				document.querySelector("#ajaxSummary").go();
				document.querySelector("#ajaxEvents").go();
				document.querySelector("#newEvtBtn").classList.toggle('hidden');
				document.querySelector("#newEvent").classList.toggle('hidden');
			});
	}
	
	window.addEventListener("polymer-ready", init, false);
	
	function newEvent() {
		var options = [];
		for (option in eventLabels) {
			if (pending && option !== "HOSP_EXIT") continue;
			if (!pending && option === "HOSP_EXIT") continue;
			options.push({value: option, label: eventLabels[option]})
		}
		tplEvents.model.options = options;
		tplEvents.model.today = moment().format("YYYY-MM-DD");
		document.querySelector("form textarea").value = null;
		document.querySelector("zdk-input-date").value = null;
		document.querySelector("zdk-input-date").classList.remove('invalid');
		document.querySelector("#newEvtBtn").classList.toggle('hidden');
		document.querySelector("#newEvent").classList.toggle('hidden');
	}
	
	function saveForm() {
		var form = document.querySelector("#form");
		var obj = form2js(form);
		if( !obj.date ) {
			return document.querySelector("zdk-input-date").classList.toggle('invalid');
		}
		document.querySelector("zdk-input-date").classList.remove('invalid');
		var newEvent = {
			datetime: moment().toISOString(),
			source  : '',
			event   : obj
		};
		
		var ajax = document.querySelector("#putEvent");
		ajax.body = JSON.stringify(newEvent);
		ajax.addEventListener("core-error", putError, false);
		ajax.go();
	}
	
	function cancelForm() {
		document.querySelector("#newEvtBtn").classList.toggle('hidden');
		document.querySelector("#newEvent").classList.toggle('hidden');
	}
	
	function putError() {
		new Modal('errorOccured');
	}
</script>
{% include "./modal.htm" %}
{% endblock %}